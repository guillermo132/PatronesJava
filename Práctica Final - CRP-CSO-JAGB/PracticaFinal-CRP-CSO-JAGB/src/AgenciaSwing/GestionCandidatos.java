/**Práctica Final Patrones de Software 2015/2016
 * Agencia de Busqueda de Empleo
 *Alumnos: Cristina Sáez Ortega - Claudia Rodriguez Peinado - Jose Andrés Guerra Bermejo
 * Clase GestionCandidatos
 */
package AgenciaSwing;

import AgenciaEmpleo.Candidato;
import AgenciaEmpleo.Comando;
import AgenciaEmpleo.ComandoEliminar;
import AgenciaEmpleo.ComandoModificar;
import AgenciaEmpleo.Direccion;
import AgenciaEmpleo.Invocador;
import AgenciaEmpleo.UtilSistema;
import java.awt.BorderLayout;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Cristina Sáez Ortega - Claudia Rodriguez Peinado - Jose Andrés Guerra Bermejo
 */
public class GestionCandidatos extends javax.swing.JFrame {


    int filas; //Variable global
    DefaultTableModel tabla = new DefaultTableModel();
    private FileInputStream fis;//donde almacenamos el flujo de datos que selecconamos en este caso una imagen
    private int longitudBytes;
    private Candidato can = null;//creo un candidato nuevo
    private Candidato copia;//Lo usaremos para usar el patron PROTOYPE
    private Direccion dir;
    private Candidato escogido;
    private Comando comando;

    /**
     * Constructor
     */
    public GestionCandidatos() {
        initComponents();
        this.setLocationRelativeTo(null);//Centramos la pantalla
        PanelFondo F = new PanelFondo(); //Creamos el objeto F de tipo PanelFondo
        this.add(F, BorderLayout.CENTER);
        this.pack();
        //Para manejar la tabla necesitamos una cabecera y los datos interiores
        String cabecera[] = {"Nombre", "Apellidos", "NIF", "Dirección", "Sueldo Minimo", "Sueldo Máximo", "CNO"};//Arreglo cabecera de tipo String y le pasamos los parámetros que queremos que se muestren
        //usamos un doble arreglo ya que los datos van dentro de la tabla, ya no es en la cabecera de la misma
        String datos[][] = {}; //Lo dejamos vacío puesto que va a ir cambiando
        tabla = new DefaultTableModel(datos, cabecera); //al modelo que tenemos le mandamos un nuevo modelo, al cual le pasamos los datos y la cabecera
        jTableDatos.setModel(tabla);//Ahora a la tabla le mandamos el modelo
        refrescar();
        comando = new ComandoModificar();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Logo = new javax.swing.JLabel();
        jLabelNombre = new javax.swing.JLabel();
        jLabelTitulo = new javax.swing.JLabel();
        VolverMenuP = new javax.swing.JButton();
        jLabelApellidos = new javax.swing.JLabel();
        jTextFieldApellidos = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldNIF = new javax.swing.JTextField();
        jLabelTlf = new javax.swing.JLabel();
        jTextFieldTlf = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldDireccion = new javax.swing.JTextField();
        jLabelNum = new javax.swing.JLabel();
        jLabelLetra = new javax.swing.JLabel();
        jTextFieldLetra = new javax.swing.JTextField();
        jLabelPiso = new javax.swing.JLabel();
        jTextFieldPiso = new javax.swing.JTextField();
        jTextFieldCodPos = new javax.swing.JTextField();
        jTextFieldLoca = new javax.swing.JTextField();
        jLabelCodPos = new javax.swing.JLabel();
        jLabelLoca = new javax.swing.JLabel();
        jTextFieldNum = new javax.swing.JTextField();
        lbFoto = new javax.swing.JLabel();
        Eliminar = new javax.swing.JButton();
        Registrar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabelOcupaciones = new javax.swing.JLabel();
        Modificar = new javax.swing.JButton();
        jTextFieldNom = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldSuelMin = new javax.swing.JTextField();
        jTextFieldSuelMax = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldClaves = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListCNO = new javax.swing.JList();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDatos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agencia de Empleo - Gestión Candidatos");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/e-Business.jpg"))); // NOI18N
        Logo.setText("jLabel5");
        Logo.setPreferredSize(new java.awt.Dimension(150, 150));

        jLabelNombre.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelNombre.setText("Nombre");

        jLabelTitulo.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        jLabelTitulo.setText("AGENCIA DE EMPLEO");
        jLabelTitulo.setToolTipText("");
        jLabelTitulo.setAlignmentX(0.5F);
        jLabelTitulo.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 0)));

        VolverMenuP.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        VolverMenuP.setForeground(new java.awt.Color(0, 102, 255));
        VolverMenuP.setText("ATRÁS");
        VolverMenuP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VolverMenuPActionPerformed(evt);
            }
        });

        jLabelApellidos.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelApellidos.setText("Apellidos");

        jTextFieldApellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldApellidosKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel1.setText("NIF");

        jTextFieldNIF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNIFActionPerformed(evt);
            }
        });
        jTextFieldNIF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNIFKeyTyped(evt);
            }
        });

        jLabelTlf.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelTlf.setText("Telefono");

        jTextFieldTlf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldTlfKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel2.setText("Dirección");

        jTextFieldDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDireccionActionPerformed(evt);
            }
        });

        jLabelNum.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelNum.setText("Nº");

        jLabelLetra.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelLetra.setText("Letra");

        jTextFieldLetra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldLetraKeyTyped(evt);
            }
        });

        jLabelPiso.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelPiso.setText("Piso");

        jTextFieldPiso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPisoActionPerformed(evt);
            }
        });
        jTextFieldPiso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldPisoKeyTyped(evt);
            }
        });

        jTextFieldCodPos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCodPosActionPerformed(evt);
            }
        });
        jTextFieldCodPos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldCodPosKeyTyped(evt);
            }
        });

        jLabelCodPos.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelCodPos.setText("Código Postal");

        jLabelLoca.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelLoca.setText("Localidad");

        jTextFieldNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNumActionPerformed(evt);
            }
        });
        jTextFieldNum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNumKeyTyped(evt);
            }
        });

        lbFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/defaultlarge.gif"))); // NOI18N
        lbFoto.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), null));
        lbFoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbFotoMouseClicked(evt);
            }
        });

        Eliminar.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        Eliminar.setText("ELIMINAR");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });

        Registrar.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        Registrar.setText("REGISTRAR");
        Registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel4.setText("Salario Neto Mensual");

        jLabelOcupaciones.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelOcupaciones.setText("Categorías de Empleo");

        Modificar.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        Modificar.setText("MODIFICAR");
        Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarActionPerformed(evt);
            }
        });

        jTextFieldNom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNomKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel3.setText("Información Personal");

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel5.setText("Información Laboral");

        jLabel6.setFont(new java.awt.Font("Verdana", 2, 11)); // NOI18N
        jLabel6.setText("Pinche el icono para seleccionar una imagen");

        jTextFieldSuelMin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldSuelMinKeyTyped(evt);
            }
        });

        jTextFieldSuelMax.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldSuelMaxKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel7.setText("Sueldo Mínimo");

        jLabel8.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel8.setText("Sueldo Máximo");

        jLabel9.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel9.setText("Claves");

        getOcupaciones();
        jScrollPane2.setViewportView(jListCNO);

        jTableDatos.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jTableDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Apellidos", "NIF", "Direccion", "Sueldo Minimo", "Sueldo Maximo", "CNO"
            }
        ));
        jTableDatos.setAlignmentX(2.0F);
        jTableDatos.setAlignmentY(2.0F);
        jTableDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableDatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableDatos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(334, 334, 334)
                        .addComponent(jLabelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabelNum)
                                    .addGap(18, 18, 18)
                                    .addComponent(jTextFieldNum, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabelPiso)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jTextFieldPiso, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(12, 12, 12)
                                    .addComponent(jLabelLetra)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jTextFieldLetra, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(63, 63, 63))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabelLoca)
                                    .addGap(18, 18, 18)
                                    .addComponent(jTextFieldLoca, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabelCodPos)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jTextFieldCodPos, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabelTlf)
                                            .addComponent(jLabel2))
                                        .addGap(42, 42, 42)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextFieldDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(66, 66, 66)
                                                        .addComponent(jLabel6))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jTextFieldNom, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(jTextFieldApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(jTextFieldNIF, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(jTextFieldTlf, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGap(118, 118, 118)
                                                        .addComponent(lbFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(52, 52, 52)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addComponent(jLabelOcupaciones)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addComponent(jLabel8)
                                                                    .addComponent(jLabel7)
                                                                    .addComponent(jLabel4))
                                                                .addGap(28, 28, 28)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                    .addComponent(jTextFieldSuelMin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(jTextFieldSuelMax, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                            .addComponent(jScrollPane2))
                                                        .addGap(18, 18, 18)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel9)
                                                            .addComponent(jTextFieldClaves, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(243, 243, 243)
                                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                    .addComponent(jLabelNombre)
                                    .addComponent(jLabelApellidos))
                                .addGap(25, 25, 25))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(369, 369, 369)
                                .addComponent(Registrar)
                                .addGap(40, 40, 40)
                                .addComponent(Eliminar)
                                .addGap(41, 41, 41)
                                .addComponent(Modificar))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(VolverMenuP))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 920, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(185, 185, 185)
                        .addComponent(Logo, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Logo, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lbFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(162, 162, 162))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabelApellidos)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextFieldNom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabelNombre))
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextFieldApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldNIF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldTlf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelTlf))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextFieldDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelPiso)
                                    .addComponent(jTextFieldPiso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelLetra)
                                    .addComponent(jTextFieldLetra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelNum))
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelLoca)
                                    .addComponent(jTextFieldLoca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelCodPos)
                                    .addComponent(jTextFieldCodPos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(39, 39, 39)
                                        .addComponent(jTextFieldSuelMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextFieldSuelMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel9))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(25, 25, 25)
                                        .addComponent(jLabel7)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabelOcupaciones)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldClaves, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Registrar)
                            .addComponent(Eliminar)
                            .addComponent(Modificar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(VolverMenuP)))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(1349, 712));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void VolverMenuPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VolverMenuPActionPerformed
        UtilSistema.guardarDatos();//Al volver a atrás se guardarán los datos introducidos
        Empleado ventana = new Empleado();
        this.setVisible(false);
        ventana.setVisible(true);
        
        
    }//GEN-LAST:event_VolverMenuPActionPerformed

    /*Validación del formulario
     * Métodos para evitar errores al introducir los datos en los JTextField 
     */
    private void jTextFieldLetraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldLetraKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z')) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldLetraKeyTyped
    
    private void jTextFieldPisoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPisoKeyTyped
        //Prevenimos que el usuario introduzca letras en el campo del piso
        char n = evt.getKeyChar();
        if (n < '0' || n > '9') {// si el caracter no esta entre 0 y 9 lo desechamos(evt.consume)
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldPisoKeyTyped
    
    private void jTextFieldCodPosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCodPosKeyTyped
        // TODO add your handling code here:
        int limite = 5;
        if (jTextFieldCodPos.getText().length() == limite) {
            evt.consume();//Una vez se halla introducido 5 dígitos el resto serán capturados y almacenados en la variable evt
        }
        char n = evt.getKeyChar();
        if (n < '0' || n > '9') {// si el caracter no esta entre 0 y 9 lo desechamos(evt.consume)
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldCodPosKeyTyped
    
    private void jTextFieldNumKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNumKeyTyped
        //Prevenimos que el usuario introduzca letras en el campo del número de edificio
        char n = evt.getKeyChar();
        if (n < '0' || n > '9') {// si el caracter no esta entre 0 y 9 lo desechamos(evt.consume)
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldNumKeyTyped
    
    private void lbFotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbFotoMouseClicked
        // Cada vez que se haga click en el JLabel aparecerá un selector de archivos
        JFileChooser se = new JFileChooser();
        se.setFileSelectionMode(JFileChooser.FILES_ONLY);    //Solo deja seleccionar archivos no carpetas
        int estado = se.showOpenDialog(null);
        if (estado == JFileChooser.APPROVE_OPTION)//si selecciona el archivo y dio a aceptar
        {
            try {
                //Con esto lo que hacemos es grabar la imagen de la base de datos
                fis = new FileInputStream(se.getSelectedFile());
                //Necesitamos saber la longitud de bytes que tiene el archivo
                this.longitudBytes = (int) se.getSelectedFile().length();//Nos devolvía un long asique lo pasamos a un entero simple(int)

                Image icono = ImageIO.read(se.getSelectedFile()).getScaledInstance(lbFoto.getWidth(), lbFoto.getHeight(), Image.SCALE_DEFAULT);//Con esto hacemos que la imagen escogida se adapte al label
                lbFoto.setIcon(new ImageIcon(icono));
                lbFoto.updateUI();
                
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_lbFotoMouseClicked
    /*
     * Método para limpiar los campos una vez se han registrado los nuevos candidatos
     */
    
    @SuppressWarnings("empty-statement")
    private void limpiarTabla(){
        
    
    if(jTableDatos.getRowCount()>0){
        int total = jTableDatos.getRowCount();
        for (int i = 0; i < total; i++) {
           tabla.removeRow(0);
            
        }
    }
    }
    private void refrescar(){
    limpiarTabla();
       
    for(int j = 0;j < UtilSistema.candidatos.size();j++){
    
    String nom = UtilSistema.candidatos.get(j).getNombre();
    String ape = UtilSistema.candidatos.get(j).getApellidos();
    String nif = UtilSistema.candidatos.get(j).getNIF();
    Direccion d = UtilSistema.candidatos.get(j).getDireccion();
    Double min = UtilSistema.candidatos.get(j).getSalMin();
    Double max = UtilSistema.candidatos.get(j).getSalMax();
    List<String> cno = UtilSistema.candidatos.get(j).getCno();
    Object datos[] = {nom, ape, nif, d, min, max, cno};
                    //Y lo tenemos que mandar al modelo en la tabla
    tabla.addRow(datos);
   
    }
    
        
    }
    
    public void Limpiar() {
        jTextFieldNom.setText("");
        jTextFieldApellidos.setText("");
        jTextFieldNIF.setText("");
        jTextFieldTlf.setText("");
        jTextFieldDireccion.setText("");
        jTextFieldNum.setText("");
        jTextFieldPiso.setText("");
        jTextFieldLetra.setText("");
        jTextFieldLoca.setText("");
        jTextFieldCodPos.setText("");
        jTextFieldSuelMin.setText("");
        jTextFieldSuelMax.setText("");
        //lbFoto.setIcon(new CustomImageIcon(getClass().getResource("/resource/defaultlarge.gif")));

        lbFoto.setIcon(null);
        
    }
    
    private void RegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistrarActionPerformed
        // Guardamos los datos del nuevo candidato en la tabla
        //Antes debemos capturar los datos
        if (this.jTextFieldNom.getText().isEmpty() //si los campos estan vacíos avisa de ser obligatorio
                || this.jTextFieldApellidos.getText().isEmpty()
                || this.jTextFieldNIF.getText().isEmpty()
                || this.jTextFieldDireccion.getText().isEmpty()
                || this.jTextFieldLetra.getText().isEmpty()
                || this.jTextFieldLetra.getText().isEmpty()
                || this.jTextFieldPiso.getText().isEmpty()
                || this.jTextFieldNum.getText().isEmpty()
                || this.jTextFieldLoca.getText().isEmpty()
                || this.jTextFieldSuelMin.getText().isEmpty()
                || this.jTextFieldSuelMax.getText().isEmpty()
                || this.jTextFieldClaves.getText().isEmpty()
                || this.jTextFieldCodPos.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Todos los campos son "
                    + "obligatorios");
            return;
        }
        
        String tipo = "normal";
        String nom = jTextFieldNom.getText();
        String ape = jTextFieldApellidos.getText();
        String nif = jTextFieldNIF.getText();
        int tlf = Integer.parseInt(jTextFieldTlf.getText());
        String dire = jTextFieldDireccion.getText();
        int piso = Integer.parseInt(jTextFieldPiso.getText());
        int num = Integer.parseInt(jTextFieldNum.getText());
        String letra = jTextFieldLetra.getText();
        String loca = jTextFieldLoca.getText();
        int codPos = Integer.parseInt(jTextFieldCodPos.getText());
        double suelMin = Double.parseDouble(jTextFieldSuelMin.getText());//getSelectedItem ya que queremos ver la palabra no el numero y toString ya que es un Objeto
        double suelMax = Double.parseDouble(jTextFieldSuelMax.getText());
        List<String> ocupa = jListCNO.getSelectedValuesList();
        String[] cl = jTextFieldClaves.getText().split(",");
        //FileInputStream fot = lbFoto.ge
        dir = new Direccion(dire, num, piso, letra, loca, codPos);
        //Para insertarlo en la tabla necesitamos un arreglo que pueda usar todo tipo de dato: Object
        
        if (suelMin > suelMax) {
            JOptionPane.showMessageDialog(this, "Sueldo mínimo incorrecto", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            //Usamos PROTOTYPE, copiamos al Candidato y modificamos sus valores siempre y cuando ya hayamos creado un Candidadto anteriomente
            if (can ==null)
                {
                    can = new Candidato(nom, ape, nif, tlf, suelMin, suelMax, dir, ocupa, cl);
                    if (UtilSistema.AltaCandidato(can)) {
                    JOptionPane.showMessageDialog(this, "Candidato dado de alta correctamente");
                    Object datos[] = {nom, ape, nif, dire, suelMin, suelMax, ocupa};//cl,tipoJornada,gr
                    //Y lo tenemos que mandar al modelo en la tabla
                    
                    Limpiar();
                    }                
           }else{
                System.out.println("Copia");
                    copia = (Candidato) can.copia();
                    copia.setNombre(nom);
                    copia.setApellidos(ape);
                    copia.setNIF(nif);
                    copia.setTlf(tlf);
                    copia.setSalMin(suelMin);
                    copia.setSalMax(suelMax);
                    copia.setDireccion(dir);
                    copia.setCno(ocupa);
                    copia.setClaves(cl);
                    if (UtilSistema.AltaCandidato(copia)) {
                    JOptionPane.showMessageDialog(this, "Candidato dado de alta correctamente");
                    Object datos[] = {nom, ape, nif, dire, suelMin, suelMax, ocupa};//cl,tipoJornada,gr
                    //Y lo tenemos que mandar al modelo en la tabla
                    
                    
                    Limpiar();
                    }
            }
            refrescar();
        }
        
        // } //catch (NumberFormatException | HeadlessException e) {
        //  JOptionPane.showMessageDialog(this, "Error: Se ha dejado casillas sin rellenar " + e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        //} catch (Exception e) {
        //  JOptionPane.showMessageDialog(this, "Error: Se ha dejado alguna casilla sin rellenar", "ERROR", JOptionPane.ERROR_MESSAGE);
        //System.out.println(e.getMessage());
        //}
    }//GEN-LAST:event_RegistrarActionPerformed
    
    private void jTextFieldApellidosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldApellidosKeyTyped
        // Impedimos que el usuario pueda introducir dígitos en el campo Apellidos
        /*Para ello lo que hacemos con el evento evt.getKeyChar es que cuendo el usuario pulse un dígito no lo reconozca y por tanto no se escriba
         Por ello cada dígito que presione el usuario, se almacena en la variable evt  */
        char c = evt.getKeyChar();
        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z') && (c != ' ')) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldApellidosKeyTyped
    
    private void jTextFieldNIFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNIFKeyTyped
        // Limita el número de carácteres a introducir por el usuario para el DNI
        int limite = 9;
        if (jTextFieldNIF.getText().length() == limite) {
            evt.consume();//Una vez se halla introducido 9 caracteres el resto serán capturados y almacenados en la variable evt
        }
        
    }//GEN-LAST:event_jTextFieldNIFKeyTyped
    
    private void jTextFieldTlfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldTlfKeyTyped
        // Prevenimos que el usuario introduzca letras en el campo de Telefono
        /*Para ello mediante el evento evt.getKeyChar
         * cuando el usuario pulse una letra no la reconozca y por tanto no se escriba
         Por ello cada caracter que presione el usuario se almacena en la variable evt  */
        int limite = 9;//atributo que limita el número de caracteres a introducir en el campo del telefono
        if (jTextFieldTlf.getText().length() == limite) {
            evt.consume();//Una vez se halla introducido 9 dígitos el resto serán capturados y almacenados en la variable evt
        }
        char n = evt.getKeyChar();
        if (n < '0' || n > '9') {// si el caracter no esta entre 0 y 9 lo desechamos(evt.consume)
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldTlfKeyTyped

   /*
     * Método para eliminar los datos introducidos en la tabla
     */
    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        //Antes de eliminar tenemos que seleccionar qué fila se desea eliminar
       Candidato eliminado = null;
        
        
        Invocador inv = new Invocador();
        comando = new ComandoEliminar();
        inv.setComando(comando);
        int[] sele = jTableDatos.getSelectedRows();
        eliminado = UtilSistema.candidatos.get(sele[0]);
        inv.ejecutaComando(eliminado);
        refrescar();
        
        
    }//GEN-LAST:event_EliminarActionPerformed
    /*
     * Botón de ayuda que va a contener los datos que se esta imprimiento en los campos
     */
    //Se modifica unicamente en la tabla no en el candidato!!!!!!!!!
    private void ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarActionPerformed
        Candidato modificado = null;
        
        String tipo = "normal";
        String nom = jTextFieldNom.getText();
        String ape = jTextFieldApellidos.getText();
        String nif = jTextFieldNIF.getText();
        int tlf = Integer.parseInt(jTextFieldTlf.getText());
        String dire = jTextFieldDireccion.getText();
        int piso = Integer.parseInt(jTextFieldPiso.getText());
        int num = Integer.parseInt(jTextFieldNum.getText());
        String letra = jTextFieldLetra.getText();
        String loca = jTextFieldLoca.getText();
        int codPos = Integer.parseInt(jTextFieldCodPos.getText());
        double suelMin = Double.parseDouble(jTextFieldSuelMin.getText());//getSelectedItem ya que queremos ver la palabra no el numero y toString ya que es un Objeto
        double suelMax = Double.parseDouble(jTextFieldSuelMax.getText());
        List<String> ocupa = UtilSistema.candidatos.get(jTableDatos.getSelectedRows()[0]).getCno();
        String[] cl = jTextFieldClaves.getText().split(",");
        //FileInputStream fot = lbFoto.ge
        dir = new Direccion(dire, num, piso, letra, loca, codPos);
        
        if (suelMin > suelMax) {
            JOptionPane.showMessageDialog(this, "Sueldo mínimo incorrecto", "ERROR", JOptionPane.ERROR_MESSAGE);
            
        } else {
        modificado = new Candidato(nom, ape, nif, tlf, suelMin, suelMax, dir, ocupa, cl);
        Invocador inv = new Invocador();
        comando = new ComandoModificar();
        
        inv.setComando(comando);
        inv.ejecutaComando(modificado);
        refrescar();
        }
         
        
    }//GEN-LAST:event_ModificarActionPerformed
    
    private void jTextFieldNomKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNomKeyTyped
        // Impedimos que el usuario pueda introducir en el campo de nombre dígitos
        /*Para ello lo que hacemos con el evento evt.getKeyChar es que cuendo el usuario pulse un dígito no lo reconozca y por tanto no se escriba
         Por ello cada dígito que presione el usuario, se almacena en la variable evt  */
        char c = evt.getKeyChar();
        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z') && (c != ' ')) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldNomKeyTyped
    
    private void jTextFieldNIFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNIFActionPerformed
    }//GEN-LAST:event_jTextFieldNIFActionPerformed
    
    private void jTextFieldSuelMinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSuelMinKeyTyped
        char n = evt.getKeyChar();
        if (n < '0' || n > '9') {// si el caracter no esta entre 0 y 9 lo desechamos(evt.consume)
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldSuelMinKeyTyped
    
    private void jTextFieldSuelMaxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSuelMaxKeyTyped
        char n = evt.getKeyChar();
        if (n < '0' || n > '9') {// si el caracter no esta entre 0 y 9 lo desechamos(evt.consume)
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldSuelMaxKeyTyped
    
    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // No sirve ya que es la de abajo(ERROR)
    }//GEN-LAST:event_formWindowClosed
    
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        Empleado principal = new Empleado();
        principal.setVisible(true);
        //UtilSistema.guardarDatos();
    }//GEN-LAST:event_formWindowClosing
    
    private void jTextFieldNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNumActionPerformed

    private void jTextFieldPisoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPisoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPisoActionPerformed

    private void jTextFieldCodPosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCodPosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCodPosActionPerformed

    private void jTableDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDatosMouseClicked
        //indicamos qué fila se esta seleccionando
        int filaSele = jTableDatos.getSelectedRow();
        int[] sele = jTableDatos.getSelectedRows();
        escogido = UtilSistema.getCandidatos().get(sele[0]);
        comando.setCandidato(escogido);
        
        
        //ahora imprimimos en la caja de texto
        jTextFieldNom.setText(jTableDatos.getValueAt(filaSele, 0).toString());//fila y columna
        jTextFieldApellidos.setText(jTableDatos.getValueAt(filaSele, 1).toString());
        jTextFieldNIF.setText(jTableDatos.getValueAt(filaSele, 2).toString());
        jTextFieldDireccion.setText(escogido.getDireccion().getNombre());
        jTextFieldSuelMin.setText(jTableDatos.getValueAt(filaSele, 4).toString());
        jTextFieldSuelMax.setText(jTableDatos.getValueAt(filaSele, 5).toString());
        jTextFieldTlf.setText(String.valueOf(escogido.getTlf()));
        jTextFieldNum.setText(String.valueOf(escogido.getDireccion().getNumero()));
        jTextFieldPiso.setText(String.valueOf(escogido.getDireccion().getPiso()));
        jTextFieldLetra.setText(escogido.getDireccion().getLetra());
        jTextFieldLoca.setText(escogido.getDireccion().getLocalidad());
        jTextFieldCodPos.setText(String.valueOf(escogido.getDireccion().getCodigoPostal()));
        jTextFieldClaves.setText(escogido.clavesArray());
       

        /*La variable global filas va a obtener que fila hemos seleccionado
        *cuando se clickee la fila le de valor a la variable global filas
        *Esto lo hacemos para que cuando se modifique en los campos de texto, solo se modifique la fila seleccionada
        */
        filas = filaSele;
    }//GEN-LAST:event_jTableDatosMouseClicked

    private void jTextFieldDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDireccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDireccionActionPerformed

    /*
     * Al utilizar un JList en la interface,
     * para una mayor facilidad creo un archivo donde almaceno todas las cno
     */
    private void getOcupaciones() {
        //Obtiene las ocupaciones y las intrudice para que aparezcan en el jlist
        String cad;
        ArrayList<String> ocupaciones = new ArrayList<String>();
        try {
            FileInputStream fis = new FileInputStream("ocupaciones.txt");
            InputStreamReader is = new InputStreamReader(fis, "ISO-8859-1");
            BufferedReader br = new BufferedReader(is);
            while ((cad = br.readLine()) != null) {
                ocupaciones.add(cad);
                
            }
            br.close();
            jListCNO.setListData(ocupaciones.toArray());
            
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionCandidatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionCandidatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionCandidatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionCandidatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionCandidatos().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Eliminar;
    private javax.swing.JLabel Logo;
    private javax.swing.JButton Modificar;
    public static javax.swing.JButton Registrar;
    private javax.swing.JButton VolverMenuP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelApellidos;
    private javax.swing.JLabel jLabelCodPos;
    private javax.swing.JLabel jLabelLetra;
    private javax.swing.JLabel jLabelLoca;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JLabel jLabelNum;
    private javax.swing.JLabel jLabelOcupaciones;
    private javax.swing.JLabel jLabelPiso;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JLabel jLabelTlf;
    private javax.swing.JList jListCNO;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTable jTableDatos;
    public static javax.swing.JTextField jTextFieldApellidos;
    private javax.swing.JTextField jTextFieldClaves;
    public static javax.swing.JTextField jTextFieldCodPos;
    public static javax.swing.JTextField jTextFieldDireccion;
    public static javax.swing.JTextField jTextFieldLetra;
    public static javax.swing.JTextField jTextFieldLoca;
    public static javax.swing.JTextField jTextFieldNIF;
    public static javax.swing.JTextField jTextFieldNom;
    public static javax.swing.JTextField jTextFieldNum;
    public static javax.swing.JTextField jTextFieldPiso;
    private javax.swing.JTextField jTextFieldSuelMax;
    private javax.swing.JTextField jTextFieldSuelMin;
    public static javax.swing.JTextField jTextFieldTlf;
    private javax.swing.JLabel lbFoto;
    // End of variables declaration//GEN-END:variables
}
