/**Práctica Final Patrones de Software 2015/2016
 * Agencia de Busqueda de Empleo
 *Alumnos: Cristina Sáez Ortega - Claudia Rodriguez Peinado - Jose Andrés Guerra Bermejo
 * Clase GestionEmpresas
 */
package AgenciaSwing;

import AgenciaEmpleo.Comando;
import AgenciaEmpleo.ComandoEliminarOferta;
import AgenciaEmpleo.ComandoModificarOferta;
import AgenciaEmpleo.Direccion;
import AgenciaEmpleo.Invocador;
import AgenciaEmpleo.Oferta;
import AgenciaEmpleo.Oficina;
import AgenciaEmpleo.UtilSistema;
import java.awt.BorderLayout;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import javax.swing.table.DefaultTableModel;

/**
 * @author Cristina Sáez Ortega - Claudia Rodriguez Peinado - Jose Andrés Guerra Bermejo
 */
public class GestionEmpresas extends javax.swing.JFrame {
    
    private Oficina empresa;// = new Oficina();
    private Oferta ofer = new Oferta();
    DefaultTableModel tabla;
    int filas; //Variable global
    private Direccion dir;
     private Comando comando;

    /**
     * Constructor
     */
    public GestionEmpresas() {
        initComponents();
        this.setLocationRelativeTo(null);//Centramos la pantalla
        PanelFondo F = new PanelFondo(); //Creamos el objeto F de tipo PanelFondo
        this.add(F, BorderLayout.CENTER);
        this.pack();

        //Creamos el Spinner de Fecha de Apertura de la Oferta

        Calendar cal = Calendar.getInstance();
        Date datInicial = cal.getTime();
        cal.add(Calendar.YEAR, -50);//la fecha que utilizaré como primera
        Date datPrimera = cal.getTime();
        cal.add(Calendar.YEAR, 100);//le sumamos 100 dias( 50 años para atrás y 50 años para alante)
        Date datUltima = cal.getTime();
        //Creamos el modelo para el Spinner

        jSpinnerFechaAper.setModel(new SpinnerDateModel(
                datInicial, datPrimera, datUltima, Calendar.DAY_OF_MONTH));
        jSpinnerFechaAper.setEditor(new JSpinner.DateEditor(jSpinnerFechaAper, "d/MM/yyyy"));//Le pasamos el Spinner sobre el que va a actuar y la máscara
        jSpinnerFechaCadu.setModel(new SpinnerDateModel(
                datInicial, datPrimera, datUltima, Calendar.DAY_OF_MONTH));
        jSpinnerFechaCadu.setEditor(new JSpinner.DateEditor(jSpinnerFechaCadu, "d/MM/yyyy"));//Le pasamos el Spinner sobre el que va a actuar y la máscara

        //Para manejar la tabla necesitamos una cabecera y los datos interiores
        String cabecera[] = {"Compañia", "Oficina", "Dirección", "Sueldo Minimo", "Sueldo Máximo","Ocupacion"};//Arreglo cabecera de tipo String y le pasamos los parámetros que queremos que se muestren
        //usamos un doble arreglo ya que los datos van dentro de la tabla, ya no es en la cabecera de la misma
        String datos[][] = {}; //Lo dejamos vacío puesto que va a ir cambiando
        tabla = new DefaultTableModel(datos, cabecera); //al modelo que tenemos le mandamos un nuevo modelo, al cual le pasamos los datos y la cabecera
        jTableDatos.setModel(tabla);//Ahora a la tabla le mandamos el modelo
        refrescar();
        comando = new ComandoModificarOferta();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        VolverMenuP = new javax.swing.JButton();
        Logo = new javax.swing.JLabel();
        jLabelTitulo = new javax.swing.JLabel();
        jLabelNomCompañia = new javax.swing.JLabel();
        jTextFieldNomCompañia = new javax.swing.JTextField();
        jLabelNomOficina = new javax.swing.JLabel();
        jTextFieldNomOficina = new javax.swing.JTextField();
        jLabelDireccion = new javax.swing.JLabel();
        jTextFieldDireccion = new javax.swing.JTextField();
        jLabelNum = new javax.swing.JLabel();
        jTextFieldNum = new javax.swing.JTextField();
        jLabelPiso = new javax.swing.JLabel();
        jTextFieldPiso = new javax.swing.JTextField();
        jLabelLetra = new javax.swing.JLabel();
        jTextFieldLetra = new javax.swing.JTextField();
        jTextFieldCodPos = new javax.swing.JTextField();
        jLabelCodPos = new javax.swing.JLabel();
        jTextFieldLoca = new javax.swing.JTextField();
        jLabelLoca = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDatos = new javax.swing.JTable();
        Registrar = new javax.swing.JButton();
        Eliminar = new javax.swing.JButton();
        Modificar = new javax.swing.JButton();
        jLabelOcupaciones = new javax.swing.JLabel();
        jComboBoxOcupaciones = new javax.swing.JComboBox();
        jLabelTlf = new javax.swing.JLabel();
        jTextFieldTlf = new javax.swing.JTextField();
        jLabelFechaAper = new javax.swing.JLabel();
        jLabelFehcaCadu = new javax.swing.JLabel();
        Date date = new Date();
        SpinnerDateModel sm =
        new SpinnerDateModel(date, null, null, Calendar.DATE);
        jSpinnerFechaAper = new javax.swing.JSpinner(sm);
        Date dateC = new Date();
        SpinnerDateModel ca =
        new SpinnerDateModel(dateC, null, null, Calendar.DATE);
        jSpinnerFechaAper = new javax.swing.JSpinner(ca);
        JSpinner.DateEditor cadu = new JSpinner.DateEditor(jSpinnerFechaAper,"DD/MM/yyyy");
        jSpinnerFechaAper.setEditor(cadu);
        jSpinnerFechaCadu = new javax.swing.JSpinner(ca);
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jCheckBoxJornada = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabelDedi = new javax.swing.JLabel();
        jTextFieldDedicacion = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldSuelMin = new javax.swing.JTextField();
        jTextFieldSuelMax = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldClaves = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agencia de Empleo - Gestion Oferta Empresa");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        VolverMenuP.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        VolverMenuP.setForeground(new java.awt.Color(0, 102, 255));
        VolverMenuP.setText("ATRÁS");
        VolverMenuP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VolverMenuPActionPerformed(evt);
            }
        });

        Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/e-Business.jpg"))); // NOI18N
        Logo.setText("jLabel5");

        jLabelTitulo.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        jLabelTitulo.setText("AGENCIA DE EMPLEO");
        jLabelTitulo.setToolTipText("");
        jLabelTitulo.setAlignmentX(0.5F);
        jLabelTitulo.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 0)));

        jLabelNomCompañia.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelNomCompañia.setText("Nombre Compañía");

        jTextFieldNomCompañia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNomCompañiaKeyTyped(evt);
            }
        });

        jLabelNomOficina.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelNomOficina.setText("Oficina");

        jTextFieldNomOficina.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNomOficinaKeyTyped(evt);
            }
        });

        jLabelDireccion.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelDireccion.setText("Direccion");

        jLabelNum.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelNum.setText("Nº");

        jTextFieldNum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNumKeyTyped(evt);
            }
        });

        jLabelPiso.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelPiso.setText("Piso");

        jTextFieldPiso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldPisoKeyTyped(evt);
            }
        });

        jLabelLetra.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelLetra.setText("Letra");

        jTextFieldLetra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldLetraKeyTyped(evt);
            }
        });

        jTextFieldCodPos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldCodPosKeyTyped(evt);
            }
        });

        jLabelCodPos.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelCodPos.setText("Código Postal");

        jTextFieldLoca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldLocaKeyTyped(evt);
            }
        });

        jLabelLoca.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelLoca.setText("Localidad");

        jTableDatos.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jTableDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Empresa", "Oficina", "Dirección", "Sueldo Mínimo", "Sueldo Máximo", "Ocupacion"
            }
        ));
        jTableDatos.setAlignmentX(2.0F);
        jTableDatos.setAlignmentY(2.0F);
        jTableDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableDatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableDatos);

        Registrar.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        Registrar.setText("REGISTRAR");
        Registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrarActionPerformed(evt);
            }
        });

        Eliminar.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        Eliminar.setText("ELIMINAR");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });

        Modificar.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        Modificar.setText("MODIFICAR");
        Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarActionPerformed(evt);
            }
        });

        jLabelOcupaciones.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelOcupaciones.setText("Categorías de Empleo");

        jComboBoxOcupaciones.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Administrativo", "Aereospacial", "Aeropuerto", "Agricultura", "Almacén", "Ambiente", "Arquitectura", "Automotor", "Aviación", "Bancos/operaciones bancarias", "Belleza/Cosmética", "Biotech", "Ciencia/Tecnología", "Comercialización", "Comprar", "Computación Gráfica/Animación", "Computadora/Computer", "Construcción", "Consultor/Consulta", "Contabilidad/Auditoría", "Control de Calidad", "Costes de la Edificación", "Cuidado de niños/Nanny", "Deportes", "Desarrollo de Software", "Diseño Web/Desing", "Diseño/Multimedia", "Distribución", "Doctor en Medicina", "Ecología/Conservación", "Educación", "Electrónica", "Energía", "Enfermería/Enfermera", "Enseñanza/Profesor", "Entertainment", "Especialista/Experto", "Explotación Minera", "Fabricación", "Farmacéutico", "Finanzas", "Geociencia", "Gerencia/Dirección", "Gobierno", "Hospitalidad", "Hotel/Hoteles", "Idiomas/Multilingüe", "Impuesto", "Independiente", "Industria Del Gas", "Industria del Petróleo", "Industrial", "Ingeniería/de Ingeniero", "Inmobiliaria/Agente inmobiliario", "Instalación", "Investigación/Desarrollo", "Juego", "Leyes/Legales", "Logística", "Mantenimiento", "Mecánicos", "Media/Artes audiovisuales", "Moda", "Non Profit", "Peluquería/Peluquero", "Producción", "Profesor de español/profesora", "Programador", "Práctica/Entrenamiento", "Publicar", "Publicidad", "Reclutamiento/Seleccion", "Restaurant/Gastronomía", "Secretaria", "Sector Público", "Seguridad", "Seguro", "Servicio Al Cliente", "Servicios Médicos", "Soporte Tecnico/Helpdesk", "Tecnología De Información", "Telecomunicaciones", "Telesales/Telemarketing", "Televisión/Radio/Difusión", "Trabajador Cualificado", "Trabajador Social", "Traducción", "Transformación De los Alimentos", "Transporte", "Turismo", "Técnico de Laboratorio", "Venta al por menor/mayor", "Ventas", "Verano", "Viajes/Agente de Viajes", "Voluntario", "Web/Internet", "al Aire libre/Aventura", "de Odontología/Dentista odontologo" }));
        jComboBoxOcupaciones.setSelectedIndex(-1);

        jLabelTlf.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelTlf.setText("Telefono");

        jTextFieldTlf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldTlfKeyTyped(evt);
            }
        });

        jLabelFechaAper.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelFechaAper.setText("Fecha Apertura");

        jLabelFehcaCadu.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelFehcaCadu.setText("Fecha Caducidad");

        JSpinner.DateEditor de = new JSpinner.DateEditor(jSpinnerFechaAper,"DD/MM/yyyy");
        jSpinnerFechaAper.setEditor(de);
        jSpinnerFechaAper.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jSpinnerFechaAper.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), new java.util.Date(978303600000L), new java.util.Date(1924902000000L), java.util.Calendar.DAY_OF_MONTH));
        jSpinnerFechaAper.setEditor(new javax.swing.JSpinner.DateEditor(jSpinnerFechaAper, "d/MM/yyyy"));

        jSpinnerFechaCadu.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jSpinnerFechaCadu.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), new java.util.Date(978303600000L), new java.util.Date(1924902000000L), java.util.Calendar.DAY_OF_MONTH));
        jSpinnerFechaCadu.setEditor(new javax.swing.JSpinner.DateEditor(jSpinnerFechaCadu, "d/MM/yyyy"));

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel5.setText("Información de la Oferta");

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel3.setText("Información del Contratante");

        jCheckBoxJornada.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jCheckBoxJornada.setText("Jornada Laboral Parcial");
        jCheckBoxJornada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxJornadaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel1.setText("Si su jornada no es Completa seleccione la siguiente casilla");

        jLabelDedi.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelDedi.setText("Tiempo de Dedicación");

        jTextFieldDedicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDedicacionActionPerformed(evt);
            }
        });
        jTextFieldDedicacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldDedicacionKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel4.setText("Salario Neto Mensual");

        jLabel8.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel8.setText("Sueldo Máximo");

        jTextFieldSuelMin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldSuelMinKeyTyped(evt);
            }
        });

        jTextFieldSuelMax.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldSuelMaxKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel7.setText("Sueldo Mínimo");

        jLabel9.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel9.setText("Claves");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(480, 480, 480)
                            .addComponent(jLabelTitulo))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(172, 172, 172)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(424, 424, 424)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(949, 949, 949)
                                .addComponent(jLabel9)
                                .addGap(125, 125, 125)
                                .addComponent(jTextFieldClaves, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(590, 590, 590)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addGap(69, 69, 69)
                                                .addComponent(jTextFieldSuelMin, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addGap(65, 65, 65)
                                                .addComponent(jTextFieldSuelMax, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel4))
                                        .addGap(42, 42, 42)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabelFechaAper, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabelFehcaCadu)
                                            .addComponent(jLabelOcupaciones))
                                        .addGap(26, 26, 26)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jComboBoxOcupaciones, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jSpinnerFechaAper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jSpinnerFechaCadu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelDedi)
                                        .addGap(25, 25, 25)
                                        .addComponent(jTextFieldDedicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jCheckBoxJornada)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(124, 124, 124)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 920, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(VolverMenuP)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Registrar)
                                        .addGap(18, 18, 18)
                                        .addComponent(Eliminar)
                                        .addGap(18, 18, 18)
                                        .addComponent(Modificar)
                                        .addGap(244, 244, 244)))
                                .addComponent(Logo, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jLabelNum)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldNum, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelPiso)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldPiso, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelLetra)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldLetra, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelLoca)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldLoca, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelCodPos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldCodPos, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabelDireccion)
                                    .addGap(115, 115, 115)
                                    .addComponent(jTextFieldDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabelTlf)
                                    .addGap(120, 120, 120)
                                    .addComponent(jTextFieldTlf, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabelNomOficina)
                                    .addGap(130, 130, 130)
                                    .addComponent(jTextFieldNomOficina, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabelNomCompañia)
                                    .addGap(56, 56, 56)
                                    .addComponent(jTextFieldNomCompañia, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(207, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabelTitulo)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabelOcupaciones)
                                .addComponent(jComboBoxOcupaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelFechaAper)
                                    .addComponent(jSpinnerFechaAper, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelFehcaCadu)
                                    .addComponent(jSpinnerFechaCadu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldClaves, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(jTextFieldSuelMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldSuelMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBoxJornada)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDedi)
                            .addComponent(jTextFieldDedicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelNomCompañia)
                            .addComponent(jTextFieldNomCompañia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelNomOficina)
                            .addComponent(jTextFieldNomOficina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldTlf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelTlf))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelDireccion)
                            .addComponent(jTextFieldDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelNum)
                            .addComponent(jTextFieldNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelPiso)
                            .addComponent(jTextFieldPiso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelLetra)
                            .addComponent(jTextFieldLetra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextFieldLoca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabelCodPos)
                                .addComponent(jTextFieldCodPos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabelLoca))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Registrar)
                            .addComponent(Eliminar)
                            .addComponent(Modificar)
                            .addComponent(VolverMenuP))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                        .addComponent(Logo, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void VolverMenuPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VolverMenuPActionPerformed
        UtilSistema.guardarDatos();//Al volver a atrás se guardarán los datos introducidos
        Empleado ventana = new Empleado();
        ventana.setVisible(true);
        this.setVisible(false);
       
       
    }//GEN-LAST:event_VolverMenuPActionPerformed
    
    private void jTextFieldNumKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNumKeyTyped
        //Prevenimos que el usuario introduzca letras en el campo del número de edificio
        char n = evt.getKeyChar();
        if (n < '0' || n > '9') {// si el caracter no esta entre 0 y 9 lo desechamos(evt.consume)
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldNumKeyTyped
    
    private void jTextFieldPisoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPisoKeyTyped
        //Prevenimos que el usuario introduzca letras en el campo del piso
        char n = evt.getKeyChar();
        if (n < '0' || n > '9') {// si el caracter no esta entre 0 y 9 lo desechamos(evt.consume)
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldPisoKeyTyped
    
    private void jTextFieldLetraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldLetraKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z')) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldLetraKeyTyped
    
    private void jTextFieldCodPosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCodPosKeyTyped
        // TODO add your handling code here:
        int limite = 5;
        if (jTextFieldCodPos.getText().length() == limite) {
            evt.consume();//Una vez se halla introducido 5 dígitos el resto serán capturados y almacenados en la variable evt
        }
        char n = evt.getKeyChar();
        if (n < '0' || n > '9') {// si el caracter no esta entre 0 y 9 lo desechamos(evt.consume)
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldCodPosKeyTyped

     private void limpiarTabla(){
        
    
    if(jTableDatos.getRowCount()>0){
        int total = jTableDatos.getRowCount();
        for (int i = 0; i < total; i++) {
           tabla.removeRow(0);
            
            }
        }
    }
     
    private void refrescar(){
    limpiarTabla();
    
        
    for(int j = 0;j < UtilSistema.ofertas.size();j++){
    
    String nom = UtilSistema.ofertas.get(j).getOficina().getNomCompañia();
    String ape = UtilSistema.ofertas.get(j).getOficina().getNomOficina();
    Direccion d = UtilSistema.ofertas.get(j).getOficina().getDireccion();
    Double min = UtilSistema.ofertas.get(j).getSalMin();
    Double max = UtilSistema.ofertas.get(j).getSalMax();
    String ocu = UtilSistema.ofertas.get(j).getOcupacion();
    
    Object datos[] = {nom, ape, d, min, max,ocu};
                    //Y lo tenemos que mandar al modelo en la tabla
    tabla.addRow(datos);
   
    }
    
        
    }
    /*
     * Método para limpiar los campos una vez se han registrado los nuevos candidatos
     */
    public void Limpiar() {
        jTextFieldNomCompañia.setText("");
        jTextFieldNomOficina.setText("");
        jTextFieldTlf.setText("");
        jTextFieldDireccion.setText("");
        jTextFieldNum.setText("");
        jTextFieldPiso.setText("");
        jTextFieldLetra.setText("");
        jTextFieldLoca.setText("");
        jTextFieldCodPos.setText("");
        jComboBoxOcupaciones.setSelectedIndex(0);
        jTextFieldSuelMin.setText("");
        jTextFieldSuelMax.setText("");
        jTextFieldDedicacion.setText("");
        
        
    }
    private void RegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistrarActionPerformed
        // Guardamos los datos del nuevo candidato en la tabla
        //Antes debemos capturar los datos
        if (this.jTextFieldNomCompañia.getText().isEmpty() //si los campos estan vacíos avisa de ser obligatorio
                || this.jTextFieldNomOficina.getText().isEmpty()
                || this.jTextFieldTlf.getText().isEmpty()
                || this.jTextFieldDireccion.getText().isEmpty()
                || this.jTextFieldLetra.getText().isEmpty()
                || this.jTextFieldLetra.getText().isEmpty()
                || this.jTextFieldPiso.getText().isEmpty()
                || this.jTextFieldNum.getText().isEmpty()
                || this.jTextFieldLoca.getText().isEmpty()
                || this.jTextFieldSuelMin.getText().isEmpty()
                || this.jTextFieldSuelMax.getText().isEmpty()
                || this.jTextFieldDedicacion.getText().isEmpty()
                || this.jTextFieldCodPos.getText().isEmpty()) {
            
            JOptionPane.showMessageDialog(this, "Todos los campos son "
                    + "obligatorios");
            return;
        }
        
        String nom = jTextFieldNomCompañia.getText();
        String nom2 = jTextFieldNomOficina.getText();
        int tlf = Integer.parseInt(jTextFieldTlf.getText());
        String ocupa = (String) jComboBoxOcupaciones.getSelectedItem();/*Utilizo .getSelectedItem ya que queremos que nos muestre la palabra no el num de opcion 
         Y .toString ya que se reconoce como objeto y hay que pasarlo a String* */
        Date fechaIni = (Date) jSpinnerFechaAper.getValue();
        Date fechaCadu = (Date) jSpinnerFechaCadu.getValue();
        double suelMin = Double.parseDouble(jTextFieldSuelMin.getText());//getSelectedItem ya que queremos ver la palabra no el numero y toString ya que es un Objeto
        double suelMax = Double.parseDouble(jTextFieldSuelMax.getText());
        
        String tipoJornada = "Completa";
        String[] cl = jTextFieldClaves.getText().split(",");
        //Creamos los atributos que tiene direccion
        String dire = jTextFieldDireccion.getText();
        int piso = Integer.parseInt(jTextFieldPiso.getText());
        int num = Integer.parseInt(jTextFieldNum.getText());
        String letra = jTextFieldLetra.getText();
        String loca = jTextFieldLoca.getText();
        int codPos = Integer.parseInt(jTextFieldCodPos.getText());
        //Creamos la direccion
        dir = new Direccion(dire, num, piso, letra, loca, codPos);
        //Para insertarlo en la tabla necesitamos un arreglo que pueda usar todo tipo de dato: Object
        //Creamos la oficina
        empresa = new Oficina(nom, nom2, tlf, dir);
        if (suelMin > suelMax) {
            JOptionPane.showMessageDialog(this, "Sueldo mínimo incorrecto", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            Oferta ofer = new Oferta(empresa,fechaIni,fechaCadu,suelMin,suelMax,cl,ocupa);
            if (jCheckBoxJornada.isSelected()) {
                ofer.setTipo("Discapacitado");
                double dedi = Double.parseDouble(jTextFieldDedicacion.getText());//Se obtiene el tanto por ciento de dedicacion
                ofer.setGrado(dedi);//Se cambia la dedicacion

                if (UtilSistema.AltaOferta(ofer)) {
                    JOptionPane.showMessageDialog(this, "Empresa dada de alta correctamente");
                    
                    Object datos[] = {nom, nom2, tlf, dire, ocupa, suelMin, suelMax};//cl,tipoJornada,gr
                    //Y lo tenemos que mandar al modelo en la tabla
                    tabla.addRow(datos);//En cada fila
                    Limpiar();//Una vez lo registramos dejamos vacios los campos para seguir introduciendo
                }
                
            } else {//Si no se ha seleccionado jornada parcial
                ofer.setTipo(tipoJornada);//Con el set cambiamos el tipo a Completo
                //Y or tanto la dedicación será 100%
                int dedi = 100;
                ofer.setGrado(dedi);
                if (UtilSistema.AltaOferta(ofer)) {
                    JOptionPane.showMessageDialog(this, "Empresa dada de alta correctamente");
                    refrescar();
                    Limpiar();
                }
            }
        }
        
     
    }//GEN-LAST:event_RegistrarActionPerformed
    /*
     * Este método nos permitirá seleccionar la empresa de la tabla y visualizar sus datos en los campos
     */
    private void jTableDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDatosMouseClicked
//indicamos qué fila se esta seleccionando
        int filaSele = jTableDatos.getSelectedRow();
        int[] sele = jTableDatos.getSelectedRows();
        Oferta escogido = UtilSistema.getOfertas().get(sele[0]);
        comando.setOferta(escogido);
        //ahora imprimimos en la caja de texto
        jTextFieldNomCompañia.setText(jTableDatos.getValueAt(filaSele, 0).toString());//fila y columna
        jTextFieldNomOficina.setText(jTableDatos.getValueAt(filaSele, 1).toString());
        jTextFieldTlf.setText(String.valueOf(escogido.getOficina().getTlf()));
        jTextFieldDireccion.setText(escogido.getOficina().getDireccion().getNombre());
        jTextFieldNum.setText(String.valueOf(escogido.getOficina().getDireccion().getNumero()));
        jTextFieldPiso.setText(String.valueOf(escogido.getOficina().getDireccion().getPiso()));
        jTextFieldLetra.setText(escogido.getOficina().getDireccion().getLetra());
        jTextFieldLoca.setText(escogido.getOficina().getDireccion().getLocalidad());
        jTextFieldCodPos.setText(String.valueOf(escogido.getOficina().getDireccion().getCodigoPostal()));
        jComboBoxOcupaciones.setSelectedItem(escogido.getOcupacion());
        jTextFieldSuelMin.setText(String.valueOf(escogido.getSalMin()));
        jTextFieldSuelMax.setText(String.valueOf(escogido.getSalMax()));
        jTextFieldClaves.setText(escogido.clavesArray());

        /*La variable global filas va a obtener que fila hemos seleccionado
         *cuando se clickee la fila le de valor a la variable global filas
         *Esto lo hacemos para que cuando se modifique en los campos de texto, solo se modifique la fila seleccionada
         */
        filas = filaSele;
    }//GEN-LAST:event_jTableDatosMouseClicked
    /*
     * Método para eliminar los datos introducidos en la tabla
     */
    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        Oferta eliminado = null;
        
        
        Invocador inv = new Invocador();
        comando = new ComandoEliminarOferta();
        inv.setComando(comando);
        int[] sele = jTableDatos.getSelectedRows();
        eliminado = UtilSistema.ofertas.get(sele[0]);
        comando.setOferta(eliminado);
        inv.ejecutaComando(eliminado);
        refrescar();
    }//GEN-LAST:event_EliminarActionPerformed
    
    private void jTextFieldNomCompañiaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNomCompañiaKeyTyped
      
    }//GEN-LAST:event_jTextFieldNomCompañiaKeyTyped
    
    private void jTextFieldNomOficinaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNomOficinaKeyTyped
        // Impedimos que el usuario pueda introducir en el campo de nombre dígitos
        /*Para ello lo que hacemos con el evento evt.getKeyChar es que cuendo el usuario pulse un dígito no lo reconozca y por tanto no se escriba
         Por ello cada dígito que presione el usuario, se almacena en la variable evt  */
        char c = evt.getKeyChar();
        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z') && (c != ' ')) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldNomOficinaKeyTyped
    
    private void ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarActionPerformed
       String nom = jTextFieldNomCompañia.getText();
        String nom2 = jTextFieldNomOficina.getText();
        int tlf = Integer.parseInt(jTextFieldTlf.getText());
        String ocupa = (String) jComboBoxOcupaciones.getSelectedItem();/*Utilizo .getSelectedItem ya que queremos que nos muestre la palabra no el num de opcion 
         Y .toString ya que se reconoce como objeto y hay que pasarlo a String* */
        Date fechaIni = (Date) jSpinnerFechaAper.getValue();
        Date fechaCadu = (Date) jSpinnerFechaCadu.getValue();
        double suelMin = Double.parseDouble(jTextFieldSuelMin.getText());//getSelectedItem ya que queremos ver la palabra no el numero y toString ya que es un Objeto
        double suelMax = Double.parseDouble(jTextFieldSuelMax.getText());
        
        String tipoJornada = "Completa";
        String[] cl = jTextFieldClaves.getText().split(",");
        //Creamos los atributos que tiene direccion
        String dire = jTextFieldDireccion.getText();
        int piso = Integer.parseInt(jTextFieldPiso.getText());
        int num = Integer.parseInt(jTextFieldNum.getText());
        String letra = jTextFieldLetra.getText();
        String loca = jTextFieldLoca.getText();
        int codPos = Integer.parseInt(jTextFieldCodPos.getText());
        //Creamos la direccion
        dir = new Direccion(dire, num, piso, letra, loca, codPos);
        //Para insertarlo en la tabla necesitamos un arreglo que pueda usar todo tipo de dato: Object
        //Creamos la oficina
        empresa = new Oficina(nom, nom2, tlf, dir);
        if (suelMin > suelMax) {
            JOptionPane.showMessageDialog(this, "Sueldo mínimo incorrecto", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            Oferta modificado = new Oferta(empresa,fechaIni,fechaCadu,suelMin,suelMax,cl,ocupa);
            Invocador inv = new Invocador();
            comando = new ComandoModificarOferta();
            int[] sele = jTableDatos.getSelectedRows();
            comando.setOferta(UtilSistema.ofertas.get(sele[0]));
            inv.setComando(comando);
            
            if (jCheckBoxJornada.isSelected()) {
                modificado.setTipo("Discapacitado");
                double dedi = Double.parseDouble(jTextFieldDedicacion.getText());//Se obtiene el tanto por ciento de dedicacion
                modificado.setGrado(dedi);//Se cambia la dedicacion

                
                    JOptionPane.showMessageDialog(this, "Empresa dada de alta correctamente");
                    
                    inv.ejecutaComando(modificado);
                    Limpiar();//Una vez lo registramos dejamos vacios los campos para seguir introduciendo  
            } else {//Si no se ha seleccionado jornada parcial
                ofer.setTipo(tipoJornada);//Con el set cambiamos el tipo a Completo
                //Y or tanto la dedicación será 100%
                int dedi = 100;
                ofer.setGrado(dedi);
                inv.ejecutaComando(modificado);
                    Limpiar();
                }
        refrescar();
            }
        
    }//GEN-LAST:event_ModificarActionPerformed
    
    private void jTextFieldTlfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldTlfKeyTyped
        // Prevenimos que el usuario introduzca letras en el campo de Telefono
        /*Para ello mediante el evento evt.getKeyChar
         * cuando el usuario pulse una letra no la reconozca y por tanto no se escriba
         Por ello cada caracter que presione el usuario se almacena en la variable evt  */
        int limite = 9;//atributo que limita el número de caracteres a introducir en el campo del telefono
        if (jTextFieldTlf.getText().length() == limite) {
            evt.consume();//Una vez se halla introducido 9 dígitos el resto serán capturados y almacenados en la variable evt
        }
        char n = evt.getKeyChar();
        if (n < '0' || n > '9') {// si el caracter no esta entre 0 y 9 lo desechamos(evt.consume)
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldTlfKeyTyped
    
    private void jTextFieldDedicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDedicacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDedicacionActionPerformed
    
    private void jTextFieldDedicacionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDedicacionKeyTyped
        char n = evt.getKeyChar();
        if (n < '0' || n > '9') {// si el caracter no esta entre 0 y 9 lo desechamos(evt.consume)
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldDedicacionKeyTyped
    
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
               Empleado principal = new Empleado();
        principal.setVisible(true);
        //UtilSistema.guardarDatos();//De esta forma al cerrar la ventana se guardan los datos
    }//GEN-LAST:event_formWindowClosing
    
    private void jTextFieldSuelMinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSuelMinKeyTyped
        char n = evt.getKeyChar();
        if (n < '0' || n > '9') {// si el caracter no esta entre 0 y 9 lo desechamos(evt.consume)
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldSuelMinKeyTyped
    
    private void jTextFieldSuelMaxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSuelMaxKeyTyped
        char n = evt.getKeyChar();
        if (n < '0' || n > '9') {// si el caracter no esta entre 0 y 9 lo desechamos(evt.consume)
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldSuelMaxKeyTyped
    
    private void jCheckBoxJornadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxJornadaActionPerformed
        if (jCheckBoxJornada.isSelected()) {//Si es seleccionado jlabel y jtextfield pasan a ser visibles
            jTextFieldDedicacion.setVisible(true);
            jLabelDedi.setVisible(true);
            
        } else {
            jTextFieldDedicacion.setVisible(false);
            jLabelDedi.setVisible(false);
            
        }
    }//GEN-LAST:event_jCheckBoxJornadaActionPerformed

    private void jTextFieldLocaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldLocaKeyTyped
        // TODO add your handling code here:
          // Impedimos que el usuario pueda introducir en el campo de nombre dígitos
        /*Para ello lo que hacemos con el evento evt.getKeyChar es que cuendo el usuario pulse un dígito no lo reconozca y por tanto no se escriba
         Por ello cada dígito que presione el usuario, se almacena en la variable evt  */
        char c = evt.getKeyChar();
        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z') && (c != ' ')) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldLocaKeyTyped

    /**
     *
     */
    public void getCno() {
        
        ArrayList<String> ocupaciones = new ArrayList<String>();
        String array;
        try {
            FileInputStream fis = new FileInputStream("ocupaciones.txt");
            InputStreamReader is = new InputStreamReader(fis, "ISO-8859-1");
            BufferedReader br = new BufferedReader(is);
            while ((array = br.readLine()) != null) {
                ocupaciones.add(array);
                
            }
            br.close();
            jComboBoxOcupaciones = new JComboBox(ocupaciones.toArray());
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }

    /*
     * Para modificar necesitamos saber qué fila y que columna
     */
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionEmpresas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionEmpresas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionEmpresas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionEmpresas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionEmpresas().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Eliminar;
    private javax.swing.JLabel Logo;
    private javax.swing.JButton Modificar;
    private javax.swing.JButton Registrar;
    private javax.swing.JButton VolverMenuP;
    private javax.swing.JCheckBox jCheckBoxJornada;
    public static javax.swing.JComboBox jComboBoxOcupaciones;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelCodPos;
    private javax.swing.JLabel jLabelDedi;
    private javax.swing.JLabel jLabelDireccion;
    private javax.swing.JLabel jLabelFechaAper;
    private javax.swing.JLabel jLabelFehcaCadu;
    private javax.swing.JLabel jLabelLetra;
    private javax.swing.JLabel jLabelLoca;
    private javax.swing.JLabel jLabelNomCompañia;
    private javax.swing.JLabel jLabelNomOficina;
    private javax.swing.JLabel jLabelNum;
    private javax.swing.JLabel jLabelOcupaciones;
    private javax.swing.JLabel jLabelPiso;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JLabel jLabelTlf;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinnerFechaAper;
    private javax.swing.JSpinner jSpinnerFechaCadu;
    public static javax.swing.JTable jTableDatos;
    private javax.swing.JTextField jTextFieldClaves;
    public static javax.swing.JTextField jTextFieldCodPos;
    private javax.swing.JTextField jTextFieldDedicacion;
    public static javax.swing.JTextField jTextFieldDireccion;
    public static javax.swing.JTextField jTextFieldLetra;
    public static javax.swing.JTextField jTextFieldLoca;
    private javax.swing.JTextField jTextFieldNomCompañia;
    public static javax.swing.JTextField jTextFieldNomOficina;
    public static javax.swing.JTextField jTextFieldNum;
    public static javax.swing.JTextField jTextFieldPiso;
    private javax.swing.JTextField jTextFieldSuelMax;
    private javax.swing.JTextField jTextFieldSuelMin;
    public static javax.swing.JTextField jTextFieldTlf;
    // End of variables declaration//GEN-END:variables
}
